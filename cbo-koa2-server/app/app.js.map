{"version":3,"sources":["../src/app.js"],"names":["app","Koa","bodyparser","use","origin","ctx","url","maxAge","credentials","path","join","__dirname","pathPrefix","next","start","Date","ms","console","log","method","indexOf","filePath","substr","lastIndexOf","length","resolve","require","routes","on","err","port","parseInt","config","server","http","createServer","callback","listen","error","syscall","code","process","exit"],"mappings":"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","file":"app.js","sourcesContent":["import http from 'http'\r\nimport Koa from 'koa'\r\nimport path from 'path'\r\nimport convert from 'koa-convert'\r\nimport json from 'koa-json'\r\nimport Bodyparser from 'koa-bodyparser'\r\nimport logger from 'koa-logger'\r\nimport koaStatic from 'koa-static-plus'\r\nimport config from './config'\r\nimport cors from 'koa2-cors'\r\nimport send from 'koa-send'\r\n\r\nconst app = new Koa()\r\nconst bodyparser = Bodyparser()\r\n\r\n// middlewares\r\napp.use(cors({\r\n  origin: function(ctx) {\r\n    if (ctx.url === '/test') {\r\n      return false;\r\n    }\r\n    return '*';\r\n  },\r\n  // exposeHeaders: ['WWW-Authenticate', 'Server-Authorization'],\r\n  maxAge: 60*60*24*7,\r\n  credentials: true,\r\n  // allowMethods: ['GET', 'POST', 'DELETE'],\r\n  // allowHeaders: ['Content-Type', 'Authorization', 'Accept'],\r\n}))\r\napp.use(convert(bodyparser))\r\napp.use(convert(json()))\r\napp.use(convert(logger()))\r\n\r\n// static\r\napp.use(convert(koaStatic(path.join(__dirname, '../public'), {\r\n  pathPrefix: ''\r\n})))\r\n\r\n// views\r\n// app.use(views(path.join(__dirname, '../views'), {\r\n//   extension: 'ejs'\r\n// }))\r\n\r\n// 500 error\r\n// koaOnError(app, {\r\n//   template: 'views/500.ejs'\r\n// })\r\n\r\n// logger\r\napp.use(async (ctx, next) => {\r\n  const start = new Date()\r\n  await next()\r\n  const ms = new Date() - start\r\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`)\r\n})\r\napp.use(async (ctx, next) => {\r\n  //console.log('--------ctx:', ctx);\r\n  const url = ctx.url;\r\n  if (url.indexOf('/dist') > -1) {\r\n    const filePath = url.substr(url.lastIndexOf('/'), url.length);\r\n    console.log('---------filePath:', filePath);\r\n    await send(ctx, path.resolve('/public/dist' + filePath));\r\n  } else {\r\n    await send(ctx, path.resolve('/public/index.html'));\r\n  }\r\n  await next();\r\n});\r\n\r\n//app.use(serve('/public'));\r\napp.use(async (ctx, next) => {\r\n  const url = ctx.url;\r\n  console.log('--------url:', url);\r\n  if (url.indexOf('user-hw-static') > -1) {\r\n    const filePath = url.substr(url.lastIndexOf('/'), url.length);\r\n    console.log('---------filePath:', filePath);\r\n    await send(ctx, path.resolve('/public/dist' + filePath));\r\n  } \r\n  else {\r\n    await send(ctx, path.resolve('/public/dist/index.html'));\r\n  }\r\n  await next();\r\n});\r\n\r\n// response router\r\napp.use(async (ctx, next) => {\r\n  console.log('----api');\r\n  await require('./routes').routes()(ctx, next)\r\n})\r\n// const routers = require('./routes')\r\n// app.use('/hw', routers.routes()).use(routers.allowedMethods())\r\n\r\n// 404\r\n// app.use(async (ctx) => {\r\n//   ctx.status = 404\r\n//   await ctx.render('404')\r\n// })\r\n\r\n// error logger\r\napp.on('error', async (err, ctx) => {\r\n  console.log('error occured:', err)\r\n})\r\n\r\nconst port = parseInt(config.port || '3000')\r\nconst server = http.createServer(app.callback())\r\n\r\nserver.listen(port)\r\nserver.on('error', (error) => {\r\n  if (error.syscall !== 'listen') {\r\n    throw error\r\n  }\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(port + ' requires elevated privileges')\r\n      process.exit(1)\r\n      break\r\n    case 'EADDRINUSE':\r\n      console.error(port + ' is already in use')\r\n      process.exit(1)\r\n      break\r\n    default:\r\n      throw error\r\n  }\r\n})\r\nserver.on('listening', () => {\r\n  console.log('Listening on port: %d', port)\r\n})\r\n\r\nexport default app\r\n"]}