{"version":3,"sources":["../../src/controllers/insuranceCtrl.js"],"names":["add","ctx","next","params","request","body","activity_id","user_name","cer_type","cer_id","sex","birth","mobile","e_contact","e_contact_mobile","exit_sql","exit_data","length","code","message","sql","console","log","data","list_search","admin_id","limit","pageIndex","where","where_sql","first","item","value","activities","map","id","count"],"mappings":"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","file":"insuranceCtrl.js","sourcesContent":["import {query} from '../models/db_connection';\r\nimport { pagination, getLinuxTimeStamp} from '../uitil';\r\n\r\n/**\r\n * 填写保险\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst add = async(ctx, next) => {\r\n    const params = ctx.request.body;\r\n    const {activity_id, user_name, cer_type, cer_id, sex, birth, mobile, e_contact, e_contact_mobile} = params;\r\n\r\n    const exit_sql = `select * from hw_insurance where activity_id='${activity_id}' and cer_id='${cer_id}'`;\r\n    const exit_data = await query(exit_sql);\r\n    if(exit_data.length>0){\r\n      ctx.body = {code: 1, message:'保单已经填写', exit_data}\r\n      return;\r\n    }\r\n    else {\r\n\r\n      const sql = `INSERT into hw_insurance VALUES(\r\n                NULL,'${activity_id}','${user_name}', '${cer_type}', '${cer_id}', '${sex}', '${birth}', '${mobile}', \r\n                '${e_contact}', '${e_contact_mobile}', '${getLinuxTimeStamp()}'\r\n            )`;\r\n      console.log('insert insurance', sql);\r\n      var data = await query(sql);\r\n      console.log('insert hw_insurance:', data);\r\n      ctx.body = {code: 0, message:'保单填写成功', data}\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取资料列表,管理后台使用\r\n * @param {*} ctx\r\n * @param {*} next\r\n */\r\nconst list_search = async (ctx, next) => {\r\n  const params = ctx.request.body\r\n  const {admin_id, activity_id, user_name, mobile, limit, pageIndex} = params\r\n  const where = {}\r\n  // if (activity_id) {\r\n  //   where['activity_id'] = activity_id\r\n  // }\r\n\r\n  if (user_name) {\r\n    where['user_name'] = user_name\r\n  }\r\n\r\n  if (mobile) {\r\n    where['mobile'] = mobile\r\n  }\r\n\r\n  let where_sql = ''\r\n  let first = true\r\n  for (let item in where) {\r\n    const value = where[item]\r\n    if (first) {\r\n      where_sql = `where A.${item} like \"%${value}%\"`\r\n      first = false\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and A.${item} like \"%${value}%\"`\r\n    }\r\n  }\r\n\r\n  let activities = []\r\n  if (admin_id && admin_id != 0) {\r\n    activities = await query(`select id from hw_activity where admin_id=${admin_id}`)\r\n    activities = activities.map(item => item.id)\r\n    console.log('activities', activities)\r\n    if (activities.length == 0) {\r\n      activities = 0;\r\n    }\r\n    console.log('-----', activities);\r\n    if (first) {\r\n      where_sql = `where activity_id in (${activities})`\r\n      first = false\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and activity_id in (${activities})`\r\n    }\r\n  }\r\n\r\n  if (activity_id) {\r\n    if (first) {\r\n      where_sql = `where activity_id=${activity_id}`\r\n      first = false\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and activity_id=${activity_id}`\r\n    }\r\n    // where['activity_id'] = activity_id\r\n  }\r\n\r\n  const sql = `select A.*, B.title from hw_insurance as A join hw_activity as B \r\n    on A.activity_id=B.id ${where_sql} limit ${(pageIndex - 1) * limit},${limit}`\r\n\r\n  console.log('insurance_list_search_sql:', sql)\r\n  let data = await query(sql)\r\n  // for (let item in data){\r\n  //   let ziliao = await query(`select * from hw_insurance where activity_id=? and mobile=?`, [item.activity_id, item.mobile]);\r\n  //   data[item].isZiliao = ziliao.length === 0 ? 0 : 1;\r\n  // }\r\n  let count = await query(`select count(*) as count from hw_insurance as A ${where_sql}`)\r\n\r\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count))\r\n}\r\n\r\nexport default {\r\n    add,\r\n  list_search,\r\n}"]}