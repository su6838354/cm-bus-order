{"version":3,"sources":["../../src/controllers/cboCtrl.js"],"names":["addOrder","ctx","next","params","request","body","order_date","order_path","order_station","order_class","order_ticket_count","order_owner","order_mobile","order_schedules_id","status","_query_count","count","code","message","data","create_time","Date","now","sql","console","log","res","sendCode","mobile","sms","sendSms","login","username","yanzhema","checkOk","list_search","limit","pageIndex","where","where_sql","first","item","value","list_by_mobile","map","query_count"],"mappings":"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","file":"cboCtrl.js","sourcesContent":["/**\n * Created by pdd on 2018/6/10.\n */\n\nimport {query} from '../models/db_connection';\nimport { pagination, getLinuxTimeStamp} from '../uitil';\n\nimport sms from '../sms';\n\n/**\n * 添加报名\n * @param {*} ctx\n * @param {*} next\n */\nconst addOrder = async(ctx, next) => {\n    const params = ctx.request.body;\n    const {\n        order_date,\n        order_path,\n        order_station,\n        order_class,\n        order_ticket_count,\n        order_owner,\n        order_mobile,\n        order_schedules_id,\n        status\n    } = params;\n    const count = await _query_count(order_date, order_path, order_station, order_class);\n    if (count >= 20) {\n        ctx.body = {code: 1003, message: `抱歉，${order_date}的票已预订完!`, data: count}\n    } else {\n        const create_time = Date.now()/1000;\n        const sql = `INSERT INTO cbo_order VALUES (NULL, '${order_owner}', '${order_mobile}', '${order_date}',\n              '${order_path}', '${order_station}', '${create_time}', '${order_ticket_count}', '${order_class}', \n              '${order_schedules_id}', '${status}')`;\n        console.log('add cbo_order sql:', sql);\n        const res = await query(sql);\n        ctx.body = {code: 0, message: 'success', data: res}\n    }\n}\n\nconst sendCode = async(ctx, next) => {\n    const params = ctx.request.body;\n    const { mobile } = params;\n    sms.sendSms(mobile);\n    ctx.body = {code: 0, message: 'success', data: '验证码发生成功'}\n}\n\n\nconst login = async(ctx, next) => {\n    const params = ctx.request.body;\n    const { mobile, username, yanzhema } = params;\n    if (sms.checkOk(mobile, yanzhema)) {\n        ctx.body = {code: 0, message: '登录成功', data: '登录成功'}\n    } else {\n        ctx.body = {code: 1001, message: '验证码错误', data: '验证码错误'}\n    }\n}\n\n/**\n * 获取活动列表\n * @param {*} ctx\n * @param {*} next\n */\n// const list = async (ctx, next) => {\n//     const params = ctx.request.body;\n//     const {order_path, order_date, order_station, order_class} = params;\n//     const sql = 'select * from cbo_order where admin_id=? and is_show=1 ORDER BY seq desc limit ?,?';\n//     let data = await query(sql, [admin_id, (pageIndex-1)*limit, limit]);\n//     let count = await query('select count(*) as count from hw_activity where admin_id=? and is_show=1', [admin_id]);\n//     // let join_count = await query('select count(*) as count from hw_join where activity_id=?', [data])\n//     data = data.map(item=>{\n//         if(item.registrate_end_time < moment().unix()){\n//             item.status = 'time_out';\n//         }\n//         if(item.limit_num<=item.cur_num){\n//             item.status = 'full';\n//         }\n//         return item;\n//     });\n//\n//     ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count));\n// }\n\n\n/**\n * 管理后台使用\n * @param {*} ctx\n * @param {*} next\n */\nconst list_search = async (ctx, next) => {\n    const params = ctx.request.body\n    const {order_path, order_date, order_station, order_class} = params;\n    const {limit=1000, pageIndex=1 } = params;\n    const where = {}\n\n    if (order_path) {\n        where['order_path'] = order_path\n    }\n\n    if (order_date) {\n        where['order_date'] = order_date\n    }\n\n    if (order_station) {\n        where['order_station'] = order_station\n    }\n\n    if (order_class) {\n        where['order_class'] = order_class\n    }\n\n\n    let where_sql = ''\n    let first = true\n    for (let item in where) {\n        const value = where[item]\n        if (first) {\n            where_sql = `where A.${item} like \"%${value}%\"`\n            first = false\n        }\n        else {\n            where_sql = `${where_sql} and A.${item} like \"%${value}%\"`\n        }\n    }\n\n    const sql = `select * from cbo_order as A ${where_sql} order by create_time desc limit ${(pageIndex - 1) * limit},${limit}`\n\n    console.log('cbo_order list sql:', sql)\n    let data = await query(sql)\n    let count = await query(`select count(*) as count from cbo_order as A ${where_sql}`)\n\n    ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count))\n}\n\n\nconst list_by_mobile = async (ctx, next) => {\n    const params = ctx.request.body\n    const {mobile} = params;\n    const sql = `select * from cbo_order where order_mobile=\"${mobile}\" order by create_time desc`;\n    const res = await query(sql);\n    ctx.body = {code: 0, message: 'success', data: res}\n}\n\nconst _query_count = async(order_date, order_path, order_station, order_class) => {\n    const sql = `select * from cbo_order where \n    order_date=\"${order_date}\" and \n    order_path=\"${order_path}\" and \n    order_station=\"${order_station}\" and \n    order_class=\"${order_class}\"`;\n    const res = await query(sql);\n    let count = 0;\n    res.map(item => {\n        count = count + item.order_ticket_count;\n    })\n    return count;\n}\n\nconst query_count = async(ctx, next) => {\n    const params = ctx.request.body\n    const { order_date, order_path, order_station, order_class } = params;\n    const count = _query_count(order_date, order_path, order_station, order_class);\n    ctx.body = {code: 0, message: 'success', data: count}\n}\n\nexport default {\n    addOrder,\n    sendCode,\n    login,\n    list_search,\n    list_by_mobile,\n    query_count,\n}"]}