{"version":3,"sources":["../../src/controllers/travelNoteCtrl.js"],"names":["list","ctx","next","params","request","body","limit","pageIndex","type","admin_id","sql","data","count","code","message","add","title","desc","link_url","image_url","author","view_count","start_date","console","log","update","id","created_at","res","list_search","where","where_sql","first","item","value","activities","update_show","is_show"],"mappings":"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","file":"travelNoteCtrl.js","sourcesContent":["import {query} from '../models/db_connection';\nimport { pagination, getLinuxTimeStamp} from '../uitil';\nimport moment from 'moment';\n\n/**\n * 获取游记列表\n * @param {*} ctx \n * @param {*} next \n */\nconst list = async (ctx, next) => {\n  const params = ctx.request.body;\n  const {limit, pageIndex, type, admin_id} = params;\n  const sql = 'select * from hw_travel_note where type=? and admin_id=? and is_show=1 ORDER BY id desc limit ?,?';\n  let data = await query(sql, [type, admin_id, (pageIndex-1)*limit, limit]);\n  let count = await query('select count(*) as count from hw_travel_note where type=? and admin_id=? and is_show=1', [type, admin_id]);\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count));\n}\n\n/**\n * 添加， 后台\n * @param {*} ctx\n * @param {*} next\n */\nconst add = async(ctx, next) => {\n  const params = ctx.request.body;\n  const {title, desc, link_url, image_url, author, view_count, start_date, type, admin_id} = params;\n\n  const sql = `INSERT into hw_travel_note VALUES(\n              NULL,'${title}','${desc}', '${link_url}', '${image_url}', '${author}', '${view_count}', '${start_date}', \n              '${type}', '${admin_id}', '${getLinuxTimeStamp()}', 1\n          )`;\n  console.log('add hw_travel_note sql', sql);\n  const data = await query(sql);\n  // console.log('insert hw_travel_note:', data);\n  ctx.body = {code: 0, message:'保存成功', data}\n\n}\n\n\n/**\n * 更新 管理后台使用\n * @param {*} ctx\n * @param {*} next\n */\nconst update = async(ctx, next) => {\n  const params = ctx.request.body;\n  const {id, title, desc, link_url, image_url, author, view_count, start_date, type,\n    admin_id, created_at} = params;\n  const sql = `update hw_travel_note set title='${title}', \\`desc\\`='${desc}', link_url='${link_url}', image_url='${image_url}',\n  author='${author}', view_count='${view_count}',\n              start_date='${start_date}', type='${type}', admin_id=${admin_id}, created_at='${created_at}' where id=${id}`;\n  console.log('update hw_travel_note sql:', sql);\n  const res = await query(sql);\n  ctx.body = {code: 0, message: 'success', data: res}\n}\n\n\n\n\n/**\n * 获取列表,管理后台使用\n * @param {*} ctx\n * @param {*} next\n */\nconst list_search = async (ctx, next) => {\n  const params = ctx.request.body\n  const {admin_id, id, title, author, limit, pageIndex, type} = params\n  const where = {}\n\n  if (id) {\n    where['id'] = id;\n  }\n\n  if (title) {\n    where['title'] = title;\n  }\n\n  if (author) {\n    where['author'] = author;\n  }\n  if (type) {\n    where['type'] = type;\n  }\n\n  let where_sql = ''\n  let first = true\n  for (let item in where) {\n    const value = where[item]\n    if (first) {\n      where_sql = `where A.${item} like \"%${value}%\"`\n      first = false\n    }\n    else {\n      where_sql = `${where_sql} and A.${item} like \"%${value}%\"`\n    }\n  }\n\n  let activities = []\n  if (admin_id && admin_id != 0) {\n    if (first) {\n      where_sql = `where admin_id=${admin_id}`\n      first = false\n    }\n    else {\n      where_sql = `${where_sql} and admin_id=${admin_id}`\n    }\n  }\n\n  const sql = `select A.*, B.club_name from hw_travel_note as A join hw_admin as B \n    on A.admin_id=B.id ${where_sql} limit ${(pageIndex - 1) * limit},${limit}`\n\n  console.log('hw_travel_note list sql:', sql)\n  let data = await query(sql)\n  let count = await query(`select count(*) as count from hw_travel_note as A ${where_sql}`)\n\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count))\n}\n\n\n/***\n * 隐藏 展示\n * @param ctx\n * @param next\n * @returns {Promise.<void>}\n */\nconst update_show = async(ctx, next) => {\n  const params = ctx.request.body;\n  const {id, is_show} = params;\n  const sql = `update hw_travel_note set is_show='${is_show}' where id=${id}`;\n  console.log('update hw_travel_note sql:', sql);\n  const res = await query(sql);\n  ctx.body = {code: 0, message: 'success', data: res}\n}\n\n\n\nexport default {\n  list,\n  add,\n  list_search,\n  update,\n  update_show,\n}"]}