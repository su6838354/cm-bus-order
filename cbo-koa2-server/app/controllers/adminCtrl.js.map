{"version":3,"sources":["../../src/controllers/adminCtrl.js"],"names":["login","ctx","next","params","request","body","userName","password","sql","data","console","log","length","admin","cookies","set","id","maxAge","expires","Date","httpOnly","name","code","message","logout","list_search","limit","pageIndex","where","where_sql","first","item","value","count","add","mobile","email","pwd","club_name","club_address","contact_name","contact_mobile","contact_email","res","update","club_address_p","club_address_c","club_address_t","club_address_detail","get","admin_id"],"mappings":"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","file":"adminCtrl.js","sourcesContent":["\r\n\r\nimport {query} from '../models/db_connection';\r\nimport { pagination, getLinuxTimeStamp} from '../uitil';\r\n\r\n\r\n\r\n/**\r\n * 登录\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst login = async(ctx, next) =>{\r\n    const params = ctx.request.body;\r\n    const {userName, password} = params;\r\n\r\n    const sql = `select * from hw_admin where \r\n    name='${userName}' and pwd='${password}'`;\r\n    let data = await query(sql);\r\n    console.log('select admin', data);\r\n    if(data.length>0){\r\n        const admin = data[0];\r\n         ctx.cookies.set(\r\n            'admin_id', \r\n            `0123${admin.id}`,\r\n            {\r\n                // domain: 'localhost',  // 写cookie所在的域名\r\n                // path: '/index',       // 写cookie所在的路径\r\n                maxAge: 24 * 60 * 60 * 1000, // cookie有效时长\r\n                expires: new Date('2019-02-15'),  // cookie失效时间\r\n                httpOnly: false,  // 是否只用于http请求中获取\r\n                // overwrite: false  // 是否允许重写\r\n            }\r\n        );\r\n        ctx.cookies.set('permission', '1', \r\n        {\r\n            maxAge: 24 * 60 * 60 * 1000, // cookie有效时长\r\n            expires: new Date('2019-02-15'),  // cookie失效时间\r\n            httpOnly: false,  // 是否只用于http请求中获取\r\n        });\r\n        ctx.cookies.set('name', admin.name, \r\n        {\r\n            maxAge: 24 * 60 * 60 * 1000, // cookie有效时长\r\n            expires: new Date('2019-02-15'),  // cookie失效时间\r\n            httpOnly: false,  // 是否只用于http请求中获取\r\n        })\r\n        ctx.body = {code: 0, message: 'success', data};\r\n    }\r\n    else{\r\n        ctx.body = {code: 401, message: 'failed', data}\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * 退出获取报名表\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst logout = async(ctx, next) =>{\r\n    ctx.cookies.set(\r\n        'admin_id', \r\n        ''\r\n    );\r\n    ctx.cookies.set('permission', false);\r\n    ctx.cookies.set('name', '')\r\n    ctx.body = {code: 0, message: 'success', data: {}};\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取俱乐部列表,管理后台使用\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst list_search = async (ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {limit, pageIndex} = params;\r\n  const where = {};\r\n  // if(admin_id){\r\n  //   where['admin_id'] = admin_id;\r\n  // }\r\n  // if(id){\r\n  //   where['id'] = id;\r\n  // }\r\n  // if(title){\r\n  //   where['title'] = title;\r\n  // }\r\n  let where_sql = '';\r\n  let first = true;\r\n  for(let item in where){\r\n    const value = where[item];\r\n    if(first){\r\n      where_sql = `where ${item} like \"%${value}%\"`;\r\n      first = false;\r\n    }\r\n    else {\r\n      where_sql = `${where_sql} and ${item} like \"%${value}%\"`;\r\n    }\r\n  }\r\n\r\n  const sql = `select * from hw_admin ${where_sql} limit ?,?`;\r\n  console.log('list_search_sql:', sql);\r\n  let data = await query(sql, [(pageIndex-1)*limit, limit]);\r\n  let count = await query(`select count(*) as count from hw_admin ${where_sql}`);\r\n\r\n  ctx.body = Object.assign({code: 0, message: 'success', 'data': data}, pagination(limit, pageIndex, count[0].count));\r\n}\r\n\r\n/**\r\n * 添加管理员 管理后台使用\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst add = async(ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {name, mobile, email, pwd, club_name, club_address, \r\n    contact_name, contact_mobile, contact_email} = params;\r\n  const sql = `INSERT INTO hw_admin VALUES (NULL, '${name}', '${mobile}', '${email}',\r\n              '${pwd}', '${club_name}', '${club_address}', '${contact_name}', '${contact_mobile}', \r\n              '${contact_email}', '', '', '')`;\r\n  console.log('add admin sql:', sql);\r\n  const res = await query(sql);\r\n  ctx.body = {code: 0, message: 'success', data: res}\r\n}\r\n\r\n\r\n/**\r\n * 更新管理员 管理后台使用\r\n * @param {*} ctx \r\n * @param {*} next \r\n */\r\nconst update = async(ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {id, name, mobile, email, pwd, club_name, club_address_p, club_address_c, club_address_t, club_address_detail,\r\n    contact_name, contact_mobile, contact_email} = params;\r\n  const sql = `update hw_admin set name='${name}', mobile='${mobile}', email='${email}',\r\n              pwd='${pwd}', club_name='${club_name}', \r\n              club_address_p='${club_address_p}', club_address_t='${club_address_t}', club_address_c='${club_address_c}',club_address_detail='${club_address_detail}',\r\n              contact_name='${contact_name}',\r\n              contact_mobile='${contact_mobile}', \r\n              contact_email='${contact_email}' where id=${id}`;\r\n  console.log('update admin sql:', sql);\r\n  const res = await query(sql);\r\n  ctx.body = {code: 0, message: 'success', data: res}\r\n}\r\n\r\n/**\r\n *\r\n * @param ctx\r\n * @param next\r\n * @returns {Promise.<void>}\r\n */\r\nconst get = async(ctx, next) => {\r\n  const params = ctx.request.body;\r\n  const {admin_id} = params;\r\n  const sql = `select * from hw_admin where id='${admin_id}'`;\r\n  console.log('get admin sql:', sql);\r\n  const res = await query(sql);\r\n  ctx.body = {code: 0, message: 'success', data: res}\r\n}\r\n\r\nexport default {\r\n    logout,\r\n    login,\r\n    list_search,\r\n    add,\r\n    update,\r\n  get,\r\n}\r\n"]}